#if INTERACTIVE
#r "./bin/debug/Xwt.dll"
#r "./bin/debug/FunSharp.dll"
#endif

open Бібліотека

type System.Collections.Generic.Dictionary<'TKey,'TValue> with
   member this.GetOrDefault(ключ:'TKey,значение:'TValue) =
      match this.TryGetValue(ключ) with
      | true, значение -> значение
      | false, _ -> значение


// 1942 like Game ID: KJW676
// Copyright (C) 2010, Laurent GIRAUD laurent.giraud1@free.fr
// License: MIT license http://www.opensource.org/licenses/mit-license.php
// most of Game artwork created by Ari Feldman ari@arifeldman.com"
// and others grabed from free web sprites

let кулиСінхр = obj()

//-------------------------
// or load from web url
//let Путь= "http://imode.free.fr/images1942/"
let Шлях = ""
//-------------------------

// Game area controls
let ширинаГри  = 640
let висотаГри = 480
let fps = 50
let швф = 2 //backgroundspeed
let mutable Життя_Гравця = 10
let клкостровів = 5 //nomber of island images
let кількістьостровів = 5 //nomber of island in the wall field

// Заголовок окна
let заголовокГри = "1942, Рахунок: "

ГрафичнеВікно.Сховати()
ГрафичнеВікно.Заголовок <- заголовокГри + "0"
ГрафичнеВікно.МожнаЗмінитиРозмір <- false
ГрафичнеВікно.Ширина <- ширинаГри
ГрафичнеВікно.Висота <- висотаГри

// Global variables

let mutable ігрок = "<shape name>"
let mutable ракеткаX = 0
let mutable ракеткаY = 0
let mutable фон = "<shape name>"

// addImage in the right order is needed to define the shapes depth
let острів4 = СписокЗображень.ЗавантажитиЗображення(Шлях + "island4.png")
let острів1= СписокЗображень.ЗавантажитиЗображення(Шлях + "island1.png")
let острів2= СписокЗображень.ЗавантажитиЗображення(Шлях + "island2.png")
let острів3= СписокЗображень.ЗавантажитиЗображення(Шлях + "island3.png")
let острів5= СписокЗображень.ЗавантажитиЗображення(Шлях + "island5.png")
let ігрок0 = СписокЗображень.ЗавантажитиЗображення(Шлях + "myplane1.png")
let основа = СписокЗображень.ЗавантажитиЗображення(Шлях + "fond.png")
let куля0 = СписокЗображень.ЗавантажитиЗображення(Шлях + "bullet.png")
let ворог= СписокЗображень.ЗавантажитиЗображення(Шлях + "enemy1.png")
let ворог2 = СписокЗображень.ЗавантажитиЗображення(Шлях + "enemy2.png")
let вибух_ворога1=СписокЗображень.ЗавантажитиЗображення(Шлях + "explo1.png")
let вибух_ворога2=СписокЗображень.ЗавантажитиЗображення(Шлях + "explo2.png")
let вибух_ігрока=СписокЗображень.ЗавантажитиЗображення(Шлях + "explo2.png")
let Ворожа_куля=СписокЗображень.ЗавантажитиЗображення(Шлях + "E_bullet.png")
let ``кінець`` = СписокЗображень.ЗавантажитиЗображення(Шлях + "End.png")

let массив_Ворогів = Словник() // Array that contain all the enemies
let час_Ворогів = Словник()
let лінія_ворогів = Словник()
let позX_Ворога = Словник()
let позY_Ворога = Словник()
let ворог_ШляхNBR = Словник()

let mutable ном_Ворога = 6
let mutable кількість_Ворога = 0
let швидкість_ворогів = 4.0
//enemy_NextRemove = 1
let життя_Ворогів = 10
let розмір_ігрока= 65
let розмір_ворога = 32
let розмір_куль_ворога = 8
let розмір_кулі_ігрока = 32

let масив_Островів = Словник()

let Кули_Гравця = Словник()
let ВікКули_Гравця = Словник()
ВікКули_Гравця.[1] <- 0
let Ігрок_МаксКуль = 50
let mutable Гравець_КількістьКуль = 0
let ШвидкістьКули_Ігрока = float швф + 4.0
let Ігрок_ЖиттяСнаряда = 100

let mutable ПострілX = nan
let mutable ВыстрелY = nan

let mutable інкx = 0  // X-axis increment for background
let mutable інкy = 0  // Y-axis increment for background
let mutable інккx = 0.0 // increment for bullets and all objects on X
let mutable інккy = 0.0 // increment for bullets and all objects on Y

let Кули_Ворога = Словник()
let ВікКулі_Ворога = Словник()
ВікКулі_Ворога.[1] <- 0
let Кут_Куль_Ворога= Словник()
let Ворог_МаксКуль = 30
let mutable КількістьКуль_Ворога = 0
let Швидкість_КульВорога = швф + 4
let Ворог_ЖиттяСнаряда = 50
let Ворог_Агрессивність = 200
let mutable Постріл_ВорогаX = 0
let mutable Постріл_ВорогаY = 0

let mutable ЧасІгри = 0

let mutable шляхNBR = 1
let mutable позВорогаX1 = 0
let mutable позВорогаY1 = 0
let mutable тип_ворога = 0

let mutable рахунок = 0

let позОстровів = Словник<int,Словник<int,int>>()
let інкострівx = Словник<int,int>()
let інкострівy = Словник<int,int>()
let рівень1 = Словник<int,Словник<int,int>>()
let шляхВорога = Словник<int, Словник<int, Словник<int,float>>>()
let позx = Словник<int,_>()
let позy = Словник<int,_>()

// Налаштувати світ
let rec Ініціалізація() =
   ГрафичнеВікно.Сховати()

   Миша.СховатиКурсор()

   // every enemy in tha array has 5 informations
   // TimeLine: each enemy has its own timeline
   // PathNBR: the precalculated path defineing the movement
   // the movement is decomposed in LineNbr differents lines
   // each line is define in the enemy_path table with rotation, deltaY and deltaY
   // PositonX, PositonY: position in space
   //

   ПозиціїОстровів()
   створити_рівень1()

   фон <- Фігури.ДодатиЗображення(основа)
   масив_Островів.[1] <- Фігури.ДодатиЗображення(острів1)
   масив_Островів.[2] <- Фігури.ДодатиЗображення(острів2)
   масив_Островів.[3] <- Фігури.ДодатиЗображення(острів3)
   масив_Островів.[4] <- Фігури.ДодатиЗображення(острів4)
   масив_Островів.[5] <- Фігури.ДодатиЗображення(острів5)
   for i = 6 to кількістьостровів do
      масив_Островів.[i] <- масив_Островів.[Математика.Залишок(i,4)]

   ігрок <- Фігури.ДодатиЗображення(ігрок0)
   ГрафичнеВікно.РозмірШрифта <- 20.0
   ГрафичнеВікно.КолірФона <- Кольори.Сірий
   ГрафичнеВікно.КолірПера <- Кольори.Жовтий



// Головна ігрова процедура
and Гра () =
   ГрафичнеВікно.Показати()

   // Головний цикл
   let гра = 1
   let пауза = 0
   інкx <- 0  // X-axis increment for background
   інкy <- 0  // Y-axis increment for background
   інккx <- 0.0 // increment for bullets and all objects on X
   інккy <- 0.0 // increment for bullets and all objects on Y
   let mutable ескадрон = 1
   // Начальна позиция островів 
   let mutable j=0

   for i=1 to кількістьостровів do
      j <- Математика.Залишок(i,6)
      позy.[i] <- позОстровів.[j].[2]
      позx.[i] <- позОстровів.[j].[3]
      інкострівx.[i] <- 0
      інкострівy.[i] <- 0   
   ЧасІгри <- 0
   Фігури.Перемістити(ігрок, ширинаГри/2 , висотаГри - 80 )
   while (гра = 1) do
      Програма.Затримка(1000/fps)
      ЧасІгри <- ЧасІгри + 1

      if (пауза = 0) then
         if (ЧасІгри = рівень1.[ескадрон].[1]) then

            шляхNBR <- рівень1.[ескадрон].[2]
            позВорогаX1 <- рівень1.[ескадрон].[3]  //позиция X
            позВорогаY1 <- рівень1.[ескадрон].[4]  //позиция Y
            ном_Ворога <- рівень1.[ескадрон].[6]
            тип_ворога <- рівень1.[ескадрон].[7]
            if (рівень1.[ескадрон].[5]=1) then
               створити_ворогів_зліва()
            else
               створити_ворогів_справа()         
            ескадрон <- ескадрон + 1
                 
         if (ЧасІгри > 4000) then
            Фігури.Перемістити(Фігури.ДодатиЗображення(``кінець``), 230,200)
            Програма.Затримка(5000)
            Програма.Закінчити()     
         lock кулиСінхр (fun () ->  
            переміститиусе()
         )

         ГрафичнеВікно.МишаПереміщена <- Callback(НаРухМиші)
         ГрафичнеВікно.МишаДонизу <- Callback(НаНажаттяМиші)

         ПостарітиКулю_Гравця()

and НаРухМиші () =
   ракеткаX <- int ГрафичнеВікно.МишаX - розмір_ігрока / 2
   ракеткаY <- int ГрафичнеВікно.МишаY - розмір_ігрока

   if (ракеткаX < 0) then
      ракеткаX <- 0   
   Фігури.Перемістити(ігрок, ракеткаX , ракеткаY )

and НаНажаттяМиші () =
   ПострілX <- ГрафичнеВікно.МишаX - 15.0 // in order to be from the neck of the plane
   ВыстрелY <- ГрафичнеВікно.МишаY - 80.0
   Вогонь()

and переміститиусе () =
   інккx <- 0.0
   інккy <- 0.0
   ГрафичнеВікно.Заголовок <- заголовокГри + рахунок.ToString() + " Життя:" + Життя_Гравця.ToString()

   if (ракеткаX > (ширинаГри-62) ) then
      інкx <- інкx - швф
      інккx <- інккx - float швф
      for i=1 to кількістьостровів do
         інкострівx.[i] <- інкострівx.[i] - швф    
      if (інкx = -32 ) then
         інкx <- 0
   if (ракеткаX < 64 ) then
      інкx <- інкx + швф
      інккx <- інккx + float швф
      for i=1 to кількістьостровів do
         інкострівx.[i] <- інкострівx.[i] + швф
      if (інкx = 32 ) then
         інкx <- 0
   Фігури.Перемістити(фон,інкx - 32 ,інкy - 32)

   for i=1 to кількістьостровів do
      let острx = позx.[i]+інкострівx.[i]
      let острy = позy.[i]+інкострівy.[i]
      Фігури.Перемістити(масив_Островів.[i],острx,острy)

   інкy <- інкy + швф
   інккy <- інккy + float швф
   for i=1 to кількістьостровів do
      інкострівy.[i] <- інкострівy.[i] + швф    

   if (інкy = 32) then
      інкy <- 0   

   for i=1 to кількістьостровів do
      if ((позy.[i]+інкострівy.[i]) > (висотаГри+15)) then // relaunch island if no more visible
         let R = int (Математика.Округляти(float (Математика.ОтриматиВипадковеЧисло(клкостровів))))
         let AA = Математика.Залишок(ЧасІгри,6)
         // give new coordinates
         позx.[i] <- позОстровів.[AA].[2]
         позy.[i] <- позОстровів.[AA].[3]
         Фігури.Перемістити(масив_Островів.[R],позx.[i],позy.[i])
         інкострівy.[i] <- 0
         інкострівx.[i] <- 0         
   // Перемістити пули игрока
   for i = 1 to Гравець_КількістьКуль do
      let имяФигуры = Кули_Гравця.[i]
      let Пуля_Игрокаx = Фігури.ОтриматиЛіво(имяФигуры) + інккx
      let Пуля_Игрокаy = Фігури.ОтриматиВерх(имяФигуры) - ШвидкістьКули_Ігрока
      Фігури.Перемістити(имяФигуры, Пуля_Игрокаx, Пуля_Игрокаy)
      let старийВік = ВікКули_Гравця.GetOrDefault(i, 0)
      ВікКули_Гравця.[i] <- старийВік + 1
   // Перемістити пули врага
   for iea = 1 to КількістьКуль_Ворога do
      let dx = (Математика.Син((Кут_Куль_Ворога.[iea] )) * float Швидкість_КульВорога)
      let dy = (Математика.Кос((Кут_Куль_Ворога.[iea] )) * float Швидкість_КульВорога)
      let Куля_Ворогаx = Фігури.ОтриматиЛіво(Кули_Ворога.[iea]) + dx + інккx
      let Куля_Ворогаy = Фігури.ОтриматиВерх(Кули_Ворога.[iea]) + dy + інккy * 0.1
      Фігури.Перемістити(Кули_Ворога.[iea], Куля_Ворогаx, Куля_Ворогаy)
      let старийВік =
         match ВікКулі_Ворога.TryGetValue(iea) with
         | true, n -> n
         | false, _ -> 0
      ВікКулі_Ворога.[iea] <- старийВік + 1

   // move ennemies
   let mutable i=1
   while i <= кількість_Ворога do
      // move as TimeLine and Path say
      let вNBR = ворог_ШляхNBR.[i]
      let mutable uu = лінія_ворогів.[i]
      let Час = час_Ворогів.[i]
      let etl = шляхВорога.[вNBR].[1].GetOrDefault(uu, 0.0)  //enemy own timeLine
      if (Час=etl) then  //время повернуть врага
         let rr = шляхВорога.[вNBR].[2].GetOrDefault(uu+1, 0.0)            
         Фігури.Повернути(массив_Ворогів.[i],rr)
      if (Час > etl)  then
         uu <- uu+1
         лінія_ворогів.[i] <- uu    // следующая линия для передвижения врага      
      let xx1 = позX_Ворога.[i]
      let yy1 = позY_Ворога.[i]
      let xx = float xx1+шляхВорога.[вNBR].[3].GetOrDefault(uu, 0.0)+інккx
      let yy = float yy1+шляхВорога.[вNBR].[4].GetOrDefault(uu, 0.0)+інккy*0.1
      // Случайные выстрелы врага
      if (Математика.ОтриматиВипадковеЧисло(Ворог_Агрессивність)=1) then
         Постріл_ВорогаX <- xx1 + 16
         Постріл_ВорогаY <- yy1 + 4
         if (yy1 > 0 && xx1 > 0 && yy1 < висотаГри && xx1 < ширинаГри) then
            // это избегает выстрелы врага изза экрана
            постріл_Ворога()

      Фігури.Перемістити(массив_Ворогів.[i],xx,yy)
      позX_Ворога.[i] <- int xx
      позY_Ворога.[i] <- int yy
      час_Ворогів.[i] <- Час + 1.0
      if ((float uu > шляхВорога.[вNBR].[0].[0]) && (Час > etl)) then // if last timelife remove the enemy sprite 
         let наступний_видаляемий_ворог = i
         видалити_ворога(наступний_видаляемий_ворог)      
      
      Зіткнення_ипв()
      Зіткнення_ви()

      i <- i + 1
      
and ВидалитиКулю_Гравця (player_Ammo_nextRemove) =
   Фігури.Видалити(Кули_Гравця.[player_Ammo_nextRemove])
   for iz = player_Ammo_nextRemove to Гравець_КількістьКуль - 1 do
       Кули_Гравця.[iz] <- Кули_Гравця.[iz+1]
       ВікКули_Гравця.[iz] <- ВікКули_Гравця.[iz+1]
   Кули_Гравця.Remove(Гравець_КількістьКуль) |> ігнорувати
   ВікКули_Гравця.Remove(Гравець_КількістьКуль) |> ігнорувати
   Гравець_КількістьКуль <- Гравець_КількістьКуль - 1

and ВидалитиКулю_Ворога (enemy_Ammo_nextRemove) =
   Фігури.Видалити(Кули_Ворога.[enemy_Ammo_nextRemove])
   for irea = enemy_Ammo_nextRemove to КількістьКуль_Ворога - 1 do
       Кули_Ворога.[irea] <- Кули_Ворога.[irea+1]      
       ВікКулі_Ворога.[irea] <-
         if (irea+1) < ВікКулі_Ворога.Count then ВікКулі_Ворога.[irea+1] else 0
       Кут_Куль_Ворога.[irea] <- Кут_Куль_Ворога.[irea+1]
   Кули_Ворога.Remove(КількістьКуль_Ворога) |> ігнорувати
   ВікКулі_Ворога.Remove(КількістьКуль_Ворога) |> ігнорувати
   Кут_Куль_Ворога.Remove(КількістьКуль_Ворога) |> ігнорувати
   КількістьКуль_Ворога <- КількістьКуль_Ворога - 1

and Вогонь () =
   lock кулиСінхр (fun () -> 
      // Remove additional player Ammo
      while (Гравець_КількістьКуль > Ігрок_МаксКуль ) do
         ВидалитиКулю_Гравця(1)

      // Add the player Ammo
      Гравець_КількістьКуль <- Гравець_КількістьКуль + 1
      Кули_Гравця.[Гравець_КількістьКуль] <- Фігури.ДодатиЗображення(куля0)
      Фігури.Перемістити(Кули_Гравця.[Гравець_КількістьКуль], ПострілX, ВыстрелY)
   )

and постріл_Ворога () =
   // Remove additional Enemy Ammo
   while (КількістьКуль_Ворога > (Ворог_МаксКуль - 1)) do      
      ВидалитиКулю_Ворога(1)

   // Add the Enemy Ammo
   КількістьКуль_Ворога <- КількістьКуль_Ворога + 1
   Кули_Ворога.[КількістьКуль_Ворога] <- Фігури.ДодатиЗображення(Ворожа_куля)
   Кут_Куль_Ворога.[КількістьКуль_Ворога] <- Математика.АркТан(float(ракеткаX- Постріл_ВорогаX+розмір_ігрока/2)/float(ракеткаY-Постріл_ВорогаY))
   let фігура = Кули_Ворога.[КількістьКуль_Ворога]
   Фігури.Перемістити(фігура, Постріл_ВорогаX, Постріл_ВорогаY)

//Check playerammo age
and ПостарітиКулю_Гравця () =
   while (ВікКули_Гравця.Count > 0 && ВікКули_Гравця.[1] > Ігрок_ЖиттяСнаряда) do
      ВидалитиКулю_Гравця(1)  

// Check enemy ammo age
and ПостарітиКулю_Ворога () =
   while (ВікКулі_Ворога.Count > 0 && ВікКулі_Ворога.[1] > Ворог_ЖиттяСнаряда) do
      ВидалитиКулю_Ворога(1)

and видалити_ворога (next_enemy_remove) =
   Фігури.Видалити(массив_Ворогів.[next_enemy_remove])
   // Remove all references from the arrays
   for ii = next_enemy_remove to кількість_Ворога - 1 do
      массив_Ворогів.[ii] <- массив_Ворогів.[ii+1]
      лінія_ворогів.[ii] <- лінія_ворогів.[ii+1]
      позX_Ворога.[ii] <- позX_Ворога.[ii+1]
      позY_Ворога.[ii] <- позY_Ворога.[ii+1]
      час_Ворогів.[ii] <- час_Ворогів.[ii+1]
      ворог_ШляхNBR.[ii] <- ворог_ШляхNBR.[ii+1]
   массив_Ворогів.Remove(кількість_Ворога) |> ігнорувати
   лінія_ворогів.Remove(кількість_Ворога) |> ігнорувати
   позX_Ворога.Remove(кількість_Ворога) |> ігнорувати
   позY_Ворога.Remove(кількість_Ворога) |> ігнорувати
   час_Ворогів.Remove(кількість_Ворога) |> ігнорувати
   ворог_ШляхNBR.Remove(кількість_Ворога) |> ігнорувати
   кількість_Ворога <- кількість_Ворога - 1

and створити_ворогів_зліва () =

   let mutable Хронометраж1 = 0.0
   for i=1 to ном_Ворога do
      кількість_Ворога <- кількість_Ворога + 1
      ворог_ШляхNBR.[кількість_Ворога] <- шляхNBR
      if (тип_ворога = 2) then
         массив_Ворогів.[кількість_Ворога] <- Фігури.ДодатиЗображення(ворог2)
      else
         массив_Ворогів.[кількість_Ворога] <- Фігури.ДодатиЗображення(ворог)
      лінія_ворогів.[кількість_Ворога] <- 1
      позX_Ворога.[кількість_Ворога] <- позВорогаX1
      позY_Ворога.[кількість_Ворога] <- позВорогаY1
      час_Ворогів.[кількість_Ворога] <- Хронометраж1

      позВорогаX1 <- позВорогаX1 - 64  // distance between ennemies
      Хронометраж1 <- Хронометраж1 - 64.0 / float швидкість_ворогів   
   for i=(кількість_Ворога-ном_Ворога+1) to кількість_Ворога do
      let xxx = позX_Ворога.[i]
      let yyy = позY_Ворога.[i]
      Фігури.Перемістити(массив_Ворогів.[i],xxx,yyy)

and створити_ворогів_справа () =

   let mutable Хронометраж1 = 0.0
   for i=1 to ном_Ворога do
      кількість_Ворога <- кількість_Ворога + 1
      ворог_ШляхNBR.[кількість_Ворога] <- шляхNBR
      массив_Ворогів.[кількість_Ворога] <- Фігури.ДодатиЗображення(ворог)
      лінія_ворогів.[кількість_Ворога] <- 1
      позX_Ворога.[кількість_Ворога] <- позВорогаX1
      позY_Ворога.[кількість_Ворога] <- позВорогаY1
      час_Ворогів.[кількість_Ворога] <- float Хронометраж1

      позВорогаX1 <- позВорогаX1 + 64 // distance between ennemies
      Хронометраж1 <- Хронометраж1 - 64.0 / швидкість_ворогів
         
   for i=(кількість_Ворога-ном_Ворога+1) to кількість_Ворога do
      let xxx=позX_Ворога.[i]
      let yyy=позY_Ворога.[i]
      Фігури.Перемістити(массив_Ворогів.[i],xxx,yyy)
   
and Зіткнення_ипв () =  // для пуль-игрока и врагов

   let mutable i1 = 1
   while i1 <= Гравець_КількістьКуль do
      // player bullet position
      let назваФігури = Кули_Гравця.[i1]
      let Player_Ammox = int (Фігури.ОтриматиЛіво(назваФігури))
      let Player_Ammoy = int (Фігури.ОтриматиВерх(назваФігури))
      let px1=Player_Ammox+розмір_кулі_ігрока/3   // in order to have a more precise collison than the bullet image size
      let py1=Player_Ammoy+розмір_кулі_ігрока/3
      let px2=px1+2*розмір_кулі_ігрока/3
      let py2=py1+2*розмір_кулі_ігрока/3

      let mutable куліВидалені = false
      let mutable i2 = 1
      while i2 <= кількість_Ворога do
         // позиція ворога
         let ax1=позX_Ворога.[i2]+розмір_ворога/4
         let ay1=позY_Ворога.[i2]+розмір_ворога/4

         let ax2=ax1+3*розмір_ворога/4
         let ay2=ay1+3*розмір_ворога/4

         if ( (ax1 < px1 && ax2 > px1) || (ax1 < px2 && ax2 > px2) ) then
            if ( (ay1 < py1 && ay2 > py1) || (ay1 < py2 && ay2 > py2) ) then
               // collision between enemy nbr i2 and player bullet i
               // remove bullet i and animate explosion and remove enemy i2
               if not куліВидалені then 
                  ВидалитиКулю_Гравця(i1)
                  куліВидалені <- true
               let наступний_видаляемий_ворог = i2
               видалити_ворога(наступний_видаляемий_ворог)
               // begin animation for explosion at coordinate ax1, ay1
               let toto = Фігури.ДодатиЗображення(вибух_ворога1)
               Фігури.Перемістити(toto,ax1,ay1)
               Програма.Затримка(30)
               Фігури.Видалити(toto)
               let toto = Фігури.ДодатиЗображення(вибух_ворога2)
               Фігури.Перемістити(toto,ax1,ay1)
               Програма.Затримка(30)
               Фігури.Видалити(toto)
               рахунок <- рахунок + 100

         i2 <- i2 + 1

      
      i1 <- i1 + 1

and Зіткнення_ви () =   // для врагов и игрока 
   let px1 = int (Фігури.ОтриматиЛіво(ігрок))
   let py1 = int (Фігури.ОтриматиВерх(ігрок))
   let px2 = px1 + розмір_ігрока
   let py2 = py1 + розмір_ігрока

   //Фігури.Move(Фігури.AddRectangle(px2-px1 ,py2-py1), px1, py1)
   let mutable i2 = 1
   while i2 <= кількість_Ворога do
      // позиция врага
      let ax1=позX_Ворога.[i2]
      let ay1=позY_Ворога.[i2]

      let ax2=ax1+розмір_ворога
      let ay2=ay1+розмір_ворога
      //Фігури.Move(Фігури.AddRectangle(ax2-ax1 ,ay2-ay1), ax1, ay1) 

      if ( (px1 < ax1 && px2 > ax1) || (px1 < ax2 && px2 > ax2) ) then
         if ( (py1 < ay1 && py2 > ay1) || (py1 < ay2 && py2 > ay2) ) then
            // collision between enemy nbr i2 and player 
            // animate explosion and decrease lives            
            видалити_ворога(i2)
            // begin animation for explosion at coordinate ax1, ay1
            let toto = Фігури.ДодатиЗображення(вибух_ворога1)
            Фігури.Перемістити(toto,ax1,ay1)
            Програма.Затримка(30)
            Фігури.Видалити(toto)
            let toto = Фігури.ДодатиЗображення(вибух_ігрока)
            Фігури.Перемістити(toto,ax1,ay1)
            Програма.Затримка(300)
            Фігури.Видалити(toto)
            Життя_Гравця <- Життя_Гравця - 1
            if (Життя_Гравця = 0) then
               Програма.Закінчити()

      i2 <- i2 + 1

   let px1 = ракеткаX
   let py1 = ракеткаY
   let px2 = px1 + розмір_ігрока
   let py2 = py1 + розмір_ігрока
   // Фігури.Move(Фігури.AddRectangle(px2-px1 ,py2-py1), px1, py1)
   
   let mutable i3 = 1
   while i3 <= КількістьКуль_Ворога do
      // позиция врага 

      let ax1=int (Фігури.ОтриматиЛіво(Кули_Ворога.[i3]))
      let ay1=int (Фігури.ОтриматиВерх(Кули_Ворога.[i3]))

      let ax2=ax1+розмір_куль_ворога
      let ay2=ay1+розмір_куль_ворога
      //Фігури.Move(Фігури.AddRectangle(ax2-ax1 ,ay2-ay1), ax1, ay1) 

      if ( (px1 < ax1 && px2 > ax1) || (px1 < ax2 && px2 > ax2) ) then
         if ( (py1 < ay1 && py2 > ay1) || (py1 < ay2 && py2 > ay2) ) then
            // collision between enemy ammo nbr i3 and player 
            // animate explosion and decrease lives
            ВидалитиКулю_Ворога(i3)

            // begin animation for explosion at coordinate ax1, ay1
            let toto = Фігури.ДодатиЗображення(вибух_ворога1)
            Фігури.Перемістити(toto,ракеткаX+ розмір_ігрока/2,ракеткаY+ розмір_ігрока/2)
            Програма.Затримка(30)
            Фігури.Видалити(toto)
            let toto = Фігури.ДодатиЗображення(вибух_ігрока)
            Фігури.Перемістити(toto,ракеткаX+ розмір_ігрока/2,ракеткаY+ розмір_ігрока/2)
            Програма.Затримка(300)
            Фігури.Видалити(toto)
            Життя_Гравця <- Життя_Гравця - 1
            if (Життя_Гравця = 0) then
               Програма.Закінчити()

      i3 <- i3 + 1

and ПозиціїОстровів () =
   // island positions, avoid randomGeneration and islands overlap
   позОстровів.[0] <- Словник()
   позОстровів.[0].[1] <- 1
   позОстровів.[0].[2] <- 0
   позОстровів.[0].[3] <- -150
   позОстровів.[1] <- Словник()
   позОстровів.[1].[1] <- 1
   позОстровів.[1].[2] <- - int (Математика.Округляти(float ширинаГри/2.0))
   позОстровів.[1].[3] <- -150
   позОстровів.[2] <- Словник()
   позОстровів.[2].[1] <- 2
   позОстровів.[2].[2] <- -2 * int (Математика.Округляти(float ширинаГри/3.0))
   позОстровів.[2].[3] <- -150
   позОстровів.[3] <- Словник()
   позОстровів.[3].[1] <- 1
   позОстровів.[3].[2] <- 2 * int (Математика.Округляти(float ширинаГри/3.0))
   позОстровів.[3].[3] <- -150
   позОстровів.[4] <- Словник()
   позОстровів.[4].[1] <- 2
   позОстровів.[4].[2] <- ширинаГри
   позОстровів.[4].[3] <- -150
   позОстровів.[5] <- Словник()
   позОстровів.[5].[1] <- 3
   позОстровів.[5].[2] <- int (Математика.Округляти(float ширинаГри/3.0))
   позОстровів.[5].[3] <- -150
   позОстровів.[6] <- Словник()
   позОстровів.[6].[1] <- 3
   позОстровів.[6].[2] <- -ширинаГри
   позОстровів.[6].[3] <- -150

and визначити_шляхи () =
   for i = 0 to 6 do
      шляхВорога.[i] <- Словник()
      for j = 0 to 4 do 
         шляхВорога.[i].[j] <- Словник()

   шляхВорога.[0].[0].[0] <- 3.   // nbr of strait lines of path
   шляхВорога.[0].[1].[1] <- 30.  // from 0 to this in timeline
   шляхВорога.[0].[1].[2] <- 100. // from this to next in timeline
   шляхВорога.[0].[1].[3] <- 400. // sprite goes up

   шляхВорога.[0].[2].[1] <- 0.   // first line rotation = 0
   шляхВорога.[0].[2].[2] <- 45.  // second line rotation = 45
   шляхВорога.[0].[2].[3] <- 45.

   шляхВорога.[0].[3].[1] <- швидкість_ворогів // first line x movment
   шляхВорога.[0].[3].[2] <- швидкість_ворогів // second line x movment
   шляхВорога.[0].[3].[3] <- швидкість_ворогів // third line ...

   шляхВорога.[0].[4].[1] <- 0. // first line y movment
   шляхВорога.[0].[4].[2] <- швидкість_ворогів
   шляхВорога.[0].[4].[3] <- швидкість_ворогів
   // ---------- second pat
   шляхВорога.[1].[0].[0] <- 4.
   шляхВорога.[1].[1].[1] <- 1.
   шляхВорога.[1].[1].[2] <- 1.
   шляхВорога.[1].[1].[3] <- 100.
   шляхВорога.[1].[1].[4] <- 400.

   шляхВорога.[1].[2].[1] <- 180.
   шляхВорога.[1].[2].[2] <- 135.
   шляхВорога.[1].[2].[3] <- 135.
   шляхВорога.[1].[2].[4] <- 90.

   шляхВорога.[1].[3].[1] <- -швидкість_ворогів
   шляхВорога.[1].[3].[2] <- -швидкість_ворогів
   шляхВорога.[1].[3].[3] <- -швидкість_ворогів
   шляхВорога.[1].[3].[4] <- 0.

   шляхВорога.[1].[4].[1] <- 0.
   шляхВорога.[1].[4].[2] <- 0.
   шляхВорога.[1].[4].[3] <- швидкість_ворогів
   шляхВорога.[1].[4].[4] <- швидкість_ворогів
   // round r=5
   шляхВорога.[2].[0].[0] <- 21.
   шляхВорога.[2].[1].[1] <- 50.
   шляхВорога.[2].[1].[2] <- 55.
   шляхВорога.[2].[1].[3] <- 60.
   шляхВорога.[2].[1].[4] <- 65.
   шляхВорога.[2].[1].[5] <- 70.
   шляхВорога.[2].[1].[6] <- 75.
   шляхВорога.[2].[1].[7] <- 80.
   шляхВорога.[2].[1].[8] <- 85.
   шляхВорога.[2].[1].[9] <- 90.
   шляхВорога.[2].[1].[10] <- 95.
   шляхВорога.[2].[1].[11] <- 100.
   шляхВорога.[2].[1].[12] <- 105.
   шляхВорога.[2].[1].[13] <- 110.
   шляхВорога.[2].[1].[14] <- 115.
   шляхВорога.[2].[1].[15] <- 120.
   шляхВорога.[2].[1].[16] <- 125.
   шляхВорога.[2].[1].[17] <- 130.
   шляхВорога.[2].[1].[18] <- 135.
   шляхВорога.[2].[1].[19] <- 140.
   шляхВорога.[2].[1].[20] <- 145.
   шляхВорога.[2].[1].[21] <-350.
   шляхВорога.[2].[2].[1] <- 0.
   шляхВорога.[2].[2].[2] <- 18.
   шляхВорога.[2].[2].[3] <- 36.
   шляхВорога.[2].[2].[4] <- 54.
   шляхВорога.[2].[2].[5] <- 72.
   шляхВорога.[2].[2].[6] <- 90.
   шляхВорога.[2].[2].[7] <- 108.
   шляхВорога.[2].[2].[8] <- 126.
   шляхВорога.[2].[2].[9] <- 144.
   шляхВорога.[2].[2].[10] <- 162.
   шляхВорога.[2].[2].[11] <- 180.
   шляхВорога.[2].[2].[12] <- 198.
   шляхВорога.[2].[2].[13] <- 216.
   шляхВорога.[2].[2].[14] <- 234.
   шляхВорога.[2].[2].[15] <- 252.
   шляхВорога.[2].[2].[16] <- -90.
   шляхВорога.[2].[2].[17] <- -72.
   шляхВорога.[2].[2].[18] <- -54.
   шляхВорога.[2].[2].[19] <- -36.
   шляхВорога.[2].[2].[20] <- -18.
   шляхВорога.[2].[2].[21] <- 0.
   шляхВорога.[2].[3].[1] <- швидкість_ворогів
   шляхВорога.[2].[3].[2] <- 0.95*швидкість_ворогів
   шляхВорога.[2].[3].[3] <- 0.81*швидкість_ворогів
   шляхВорога.[2].[3].[4] <- 0.59*швидкість_ворогів
   шляхВорога.[2].[3].[5] <- 0.31*швидкість_ворогів
   шляхВорога.[2].[3].[6] <- 0.
   шляхВорога.[2].[3].[7] <- -0.31*швидкість_ворогів
   шляхВорога.[2].[3].[8] <- -0.59*швидкість_ворогів
   шляхВорога.[2].[3].[9] <- -0.81*швидкість_ворогів
   шляхВорога.[2].[3].[10] <- -0.95*швидкість_ворогів
   шляхВорога.[2].[3].[11] <- -швидкість_ворогів
   шляхВорога.[2].[3].[12] <- -0.95*швидкість_ворогів
   шляхВорога.[2].[3].[13] <- -0.81*швидкість_ворогів
   шляхВорога.[2].[3].[14] <- -0.59*швидкість_ворогів
   шляхВорога.[2].[3].[15] <- -0.31*швидкість_ворогів
   шляхВорога.[2].[3].[16] <- 0.
   шляхВорога.[2].[3].[17] <- 0.31*швидкість_ворогів
   шляхВорога.[2].[3].[18] <- 0.59*швидкість_ворогів
   шляхВорога.[2].[3].[19] <- 0.81*швидкість_ворогів
   шляхВорога.[2].[3].[20] <- 0.95*швидкість_ворогів
   шляхВорога.[2].[3].[21] <- швидкість_ворогів
   шляхВорога.[2].[4].[1] <- 0.
   шляхВорога.[2].[4].[2] <- 0.31*швидкість_ворогів
   шляхВорога.[2].[4].[3] <- 0.59*швидкість_ворогів
   шляхВорога.[2].[4].[4] <- 0.81*швидкість_ворогів
   шляхВорога.[2].[4].[5] <- 0.95*швидкість_ворогів
   шляхВорога.[2].[4].[6] <- швидкість_ворогів
   шляхВорога.[2].[4].[7] <- 0.95*швидкість_ворогів
   шляхВорога.[2].[4].[8] <- 0.81*швидкість_ворогів
   шляхВорога.[2].[4].[9] <- 0.59*швидкість_ворогів
   шляхВорога.[2].[4].[10] <- 0.31*швидкість_ворогів
   шляхВорога.[2].[4].[11] <- 0.
   шляхВорога.[2].[4].[12] <- -0.31*швидкість_ворогів
   шляхВорога.[2].[4].[13] <- -0.59*швидкість_ворогів
   шляхВорога.[2].[4].[14] <- -0.81*швидкість_ворогів
   шляхВорога.[2].[4].[15] <- -0.95*швидкість_ворогів
   шляхВорога.[2].[4].[16] <- -швидкість_ворогів
   шляхВорога.[2].[4].[17] <- -0.95*швидкість_ворогів
   шляхВорога.[2].[4].[18] <- -0.81*швидкість_ворогів
   шляхВорога.[2].[4].[19] <- -0.59*швидкість_ворогів
   шляхВорога.[2].[4].[20] <- -0.31*швидкість_ворогів
   шляхВорога.[2].[4].[21] <- 0.
   // round r=20
   шляхВорога.[3].[0].[0] <- 21.
   шляхВорога.[3].[1].[1] <- 120.
   шляхВорога.[3].[1].[2] <- 140.
   шляхВорога.[3].[1].[3] <- 160.
   шляхВорога.[3].[1].[4] <- 180.
   шляхВорога.[3].[1].[5] <- 200.
   шляхВорога.[3].[1].[6] <- 220.
   шляхВорога.[3].[1].[7] <- 240.
   шляхВорога.[3].[1].[8] <- 260.
   шляхВорога.[3].[1].[9] <- 280.
   шляхВорога.[3].[1].[10] <- 300.
   шляхВорога.[3].[1].[11] <- 320.
   шляхВорога.[3].[1].[12] <- 340.
   шляхВорога.[3].[1].[13] <- 360.
   шляхВорога.[3].[1].[14] <- 380.
   шляхВорога.[3].[1].[15] <- 400.
   шляхВорога.[3].[1].[16] <- 420.
   шляхВорога.[3].[1].[17] <- 440.
   шляхВорога.[3].[1].[18] <- 460.
   шляхВорога.[3].[1].[19] <- 480.
   шляхВорога.[3].[1].[20] <- 500.
   шляхВорога.[3].[1].[21] <- 600.
   шляхВорога.[3].[2].[1] <- 0.
   шляхВорога.[3].[2].[2] <- 18.
   шляхВорога.[3].[2].[3] <- 36.
   шляхВорога.[3].[2].[4] <- 54.
   шляхВорога.[3].[2].[5] <- 72.
   шляхВорога.[3].[2].[6] <- 90.
   шляхВорога.[3].[2].[7] <- 108.
   шляхВорога.[3].[2].[8] <- 126.
   шляхВорога.[3].[2].[9] <- 144.
   шляхВорога.[3].[2].[10] <- 162.
   шляхВорога.[3].[2].[11] <- 180.
   шляхВорога.[3].[2].[12] <- 198.
   шляхВорога.[3].[2].[13] <- 216.
   шляхВорога.[3].[2].[14] <- 234.
   шляхВорога.[3].[2].[15] <- 252.
   шляхВорога.[3].[2].[16] <- -90.
   шляхВорога.[3].[2].[17] <- -72.
   шляхВорога.[3].[2].[18] <- -54.
   шляхВорога.[3].[2].[19] <- -36.
   шляхВорога.[3].[2].[20] <- -18.
   шляхВорога.[3].[2].[21] <- 0.
   шляхВорога.[3].[3].[1] <- швидкість_ворогів
   шляхВорога.[3].[3].[2] <- 0.95*швидкість_ворогів
   шляхВорога.[3].[3].[3] <- 0.81*швидкість_ворогів
   шляхВорога.[3].[3].[4] <- 0.59*швидкість_ворогів
   шляхВорога.[3].[3].[5] <- 0.31*швидкість_ворогів
   шляхВорога.[3].[3].[6] <- 0.
   шляхВорога.[3].[3].[7] <- -0.31*швидкість_ворогів
   шляхВорога.[3].[3].[8] <- -0.59*швидкість_ворогів
   шляхВорога.[3].[3].[9] <- -0.81*швидкість_ворогів
   шляхВорога.[3].[3].[10] <- -0.95*швидкість_ворогів
   шляхВорога.[3].[3].[11] <- -швидкість_ворогів
   шляхВорога.[3].[3].[12] <- -0.95*швидкість_ворогів
   шляхВорога.[3].[3].[13] <- -0.81*швидкість_ворогів
   шляхВорога.[3].[3].[14] <- -0.59*швидкість_ворогів
   шляхВорога.[3].[3].[15] <- -0.31*швидкість_ворогів
   шляхВорога.[3].[3].[16] <- 0.
   шляхВорога.[3].[3].[17] <- 0.31*швидкість_ворогів
   шляхВорога.[3].[3].[18] <- 0.59*швидкість_ворогів
   шляхВорога.[3].[3].[19] <- 0.81*швидкість_ворогів
   шляхВорога.[3].[3].[20] <- 0.95*швидкість_ворогів
   шляхВорога.[3].[3].[21] <- швидкість_ворогів
   шляхВорога.[3].[4].[1] <- 0.
   шляхВорога.[3].[4].[2] <- 0.31*швидкість_ворогів
   шляхВорога.[3].[4].[3] <- 0.59*швидкість_ворогів
   шляхВорога.[3].[4].[4] <- 0.81*швидкість_ворогів
   шляхВорога.[3].[4].[5] <- 0.95*швидкість_ворогів
   шляхВорога.[3].[4].[6] <- швидкість_ворогів
   шляхВорога.[3].[4].[7] <- 0.95*швидкість_ворогів
   шляхВорога.[3].[4].[8] <- 0.81*швидкість_ворогів
   шляхВорога.[3].[4].[9] <- 0.59*швидкість_ворогів
   шляхВорога.[3].[4].[10] <- 0.31*швидкість_ворогів
   шляхВорога.[3].[4].[11] <- 0.
   шляхВорога.[3].[4].[12] <- -0.31*швидкість_ворогів
   шляхВорога.[3].[4].[13] <- -0.59*швидкість_ворогів
   шляхВорога.[3].[4].[14] <- -0.81*швидкість_ворогів
   шляхВорога.[3].[4].[15] <- -0.95*швидкість_ворогів
   шляхВорога.[3].[4].[16] <- -швидкість_ворогів
   шляхВорога.[3].[4].[17] <- -0.95*швидкість_ворогів
   шляхВорога.[3].[4].[18] <- -0.81*швидкість_ворогів
   шляхВорога.[3].[4].[19] <- -0.59*швидкість_ворогів
   шляхВорога.[3].[4].[20] <- -0.31*швидкість_ворогів
   шляхВорога.[3].[4].[21] <- 0.

   // round r=10
   шляхВорога.[4].[0].[0] <- 21.
   шляхВорога.[4].[1].[1] <- 110.
   шляхВорога.[4].[1].[2] <- 120.
   шляхВорога.[4].[1].[3] <- 130.
   шляхВорога.[4].[1].[4] <- 140.
   шляхВорога.[4].[1].[5] <- 150.
   шляхВорога.[4].[1].[6] <- 160.
   шляхВорога.[4].[1].[7] <- 170.
   шляхВорога.[4].[1].[8] <- 180.
   шляхВорога.[4].[1].[9] <- 190.
   шляхВорога.[4].[1].[10] <- 200.
   шляхВорога.[4].[1].[11] <- 210.
   шляхВорога.[4].[1].[12] <- 220.
   шляхВорога.[4].[1].[13] <- 230.
   шляхВорога.[4].[1].[14] <- 240.
   шляхВорога.[4].[1].[15] <- 250.
   шляхВорога.[4].[1].[16] <- 260.
   шляхВорога.[4].[1].[17] <- 270.
   шляхВорога.[4].[1].[18] <- 280.
   шляхВорога.[4].[1].[19] <- 290.
   шляхВорога.[4].[1].[20] <- 300.
   шляхВорога.[4].[1].[21] <- 500.
   шляхВорога.[4].[2].[1] <- 0.
   шляхВорога.[4].[2].[2] <- 18.
   шляхВорога.[4].[2].[3] <- 36.
   шляхВорога.[4].[2].[4] <- 54.
   шляхВорога.[4].[2].[5] <- 72.
   шляхВорога.[4].[2].[6] <- 90.
   шляхВорога.[4].[2].[7] <- 108.
   шляхВорога.[4].[2].[8] <- 126.
   шляхВорога.[4].[2].[9] <- 144.
   шляхВорога.[4].[2].[10] <- 162.
   шляхВорога.[4].[2].[11] <- 180.
   шляхВорога.[4].[2].[12] <- 198.
   шляхВорога.[4].[2].[13] <- 216.
   шляхВорога.[4].[2].[14] <- 234.
   шляхВорога.[4].[2].[15] <- 252.
   шляхВорога.[4].[2].[16] <- -90.
   шляхВорога.[4].[2].[17] <- -72.
   шляхВорога.[4].[2].[18] <- -54.
   шляхВорога.[4].[2].[19] <- -36.
   шляхВорога.[4].[2].[20] <- -18.
   шляхВорога.[4].[2].[21] <- 0.
   шляхВорога.[4].[3].[1] <- швидкість_ворогів
   шляхВорога.[4].[3].[2] <- 0.95*швидкість_ворогів
   шляхВорога.[4].[3].[3] <- 0.81*швидкість_ворогів
   шляхВорога.[4].[3].[4] <- 0.59*швидкість_ворогів
   шляхВорога.[4].[3].[5] <- 0.31*швидкість_ворогів
   шляхВорога.[4].[3].[6] <- 0.
   шляхВорога.[4].[3].[7] <- -0.31*швидкість_ворогів
   шляхВорога.[4].[3].[8] <- -0.59*швидкість_ворогів
   шляхВорога.[4].[3].[9] <- -0.81*швидкість_ворогів
   шляхВорога.[4].[3].[10] <- -0.95*швидкість_ворогів
   шляхВорога.[4].[3].[11] <- -швидкість_ворогів
   шляхВорога.[4].[3].[12] <- -0.95*швидкість_ворогів
   шляхВорога.[4].[3].[13] <- -0.81*швидкість_ворогів
   шляхВорога.[4].[3].[14] <- -0.59*швидкість_ворогів
   шляхВорога.[4].[3].[15] <- -0.31*швидкість_ворогів
   шляхВорога.[4].[3].[16] <- 0.
   шляхВорога.[4].[3].[17] <- 0.31*швидкість_ворогів
   шляхВорога.[4].[3].[18] <- 0.59*швидкість_ворогів
   шляхВорога.[4].[3].[19] <- 0.81*швидкість_ворогів
   шляхВорога.[4].[3].[20] <- 0.95*швидкість_ворогів
   шляхВорога.[4].[3].[21] <- швидкість_ворогів
   шляхВорога.[4].[4].[1] <- 0.
   шляхВорога.[4].[4].[2] <- 0.31*швидкість_ворогів
   шляхВорога.[4].[4].[3] <- 0.59*швидкість_ворогів
   шляхВорога.[4].[4].[4] <- 0.81*швидкість_ворогів
   шляхВорога.[4].[4].[5] <- 0.95*швидкість_ворогів
   шляхВорога.[4].[4].[6] <- швидкість_ворогів
   шляхВорога.[4].[4].[7] <- 0.95*швидкість_ворогів
   шляхВорога.[4].[4].[8] <- 0.81*швидкість_ворогів
   шляхВорога.[4].[4].[9] <- 0.59*швидкість_ворогів
   шляхВорога.[4].[4].[10] <- 0.31*швидкість_ворогів
   шляхВорога.[4].[4].[11] <- 0.
   шляхВорога.[4].[4].[12] <- -0.31*швидкість_ворогів
   шляхВорога.[4].[4].[13] <- -0.59*швидкість_ворогів
   шляхВорога.[4].[4].[14] <- -0.81*швидкість_ворогів
   шляхВорога.[4].[4].[15] <- -0.95*швидкість_ворогів
   шляхВорога.[4].[4].[16] <- -швидкість_ворогів
   шляхВорога.[4].[4].[17] <- -0.95*швидкість_ворогів
   шляхВорога.[4].[4].[18] <- -0.81*швидкість_ворогів
   шляхВорога.[4].[4].[19] <- -0.59*швидкість_ворогів
   шляхВорога.[4].[4].[20] <- -0.31*швидкість_ворогів
   шляхВорога.[4].[4].[21] <- 0.

   // round r=15 + exit down
   шляхВорога.[5].[0].[0] <- 27.
   шляхВорога.[5].[1].[1] <- 120.
   шляхВорога.[5].[1].[2] <- 125.
   шляхВорога.[5].[1].[3] <- 150.
   шляхВорога.[5].[1].[4] <- 165.
   шляхВорога.[5].[1].[5] <- 180.
   шляхВорога.[5].[1].[6] <- 195.
   шляхВорога.[5].[1].[7] <- 210.
   шляхВорога.[5].[1].[8] <- 225.
   шляхВорога.[5].[1].[9] <- 240.
   шляхВорога.[5].[1].[10] <- 255.
   шляхВорога.[5].[1].[11] <- 270.
   шляхВорога.[5].[1].[12] <- 285.
   шляхВорога.[5].[1].[13] <- 300.
   шляхВорога.[5].[1].[14] <- 315.
   шляхВорога.[5].[1].[15] <- 330.
   шляхВорога.[5].[1].[16] <- 345.
   шляхВорога.[5].[1].[17] <- 360.
   шляхВорога.[5].[1].[18] <- 375.
   шляхВорога.[5].[1].[19] <- 390.
   шляхВорога.[5].[1].[20] <- 405.
   шляхВорога.[5].[1].[21] <- 600.
   шляхВорога.[5].[1].[22] <- 615.
   шляхВорога.[5].[1].[23] <- 630.
   шляхВорога.[5].[1].[24] <- 645.
   шляхВорога.[5].[1].[25] <- 660.
   шляхВорога.[5].[1].[26] <- 675.
   шляхВорога.[5].[1].[27] <- 800.

   шляхВорога.[5].[2].[1] <- 0.
   шляхВорога.[5].[2].[2] <- 18.
   шляхВорога.[5].[2].[3] <- 36.
   шляхВорога.[5].[2].[4] <- 54.
   шляхВорога.[5].[2].[5] <- 72.
   шляхВорога.[5].[2].[6] <- 90.
   шляхВорога.[5].[2].[7] <- 108.
   шляхВорога.[5].[2].[8] <- 126.
   шляхВорога.[5].[2].[9] <- 144.
   шляхВорога.[5].[2].[10] <- 162.
   шляхВорога.[5].[2].[11] <- 180.
   шляхВорога.[5].[2].[12] <- 198.
   шляхВорога.[5].[2].[13] <- 216.
   шляхВорога.[5].[2].[14] <- 234.
   шляхВорога.[5].[2].[15] <- 252.
   шляхВорога.[5].[2].[16] <- -90.
   шляхВорога.[5].[2].[17] <- -72.
   шляхВорога.[5].[2].[18] <- -54.
   шляхВорога.[5].[2].[19] <- -36.
   шляхВорога.[5].[2].[20] <- -18.
   шляхВорога.[5].[2].[21] <- 0.

   шляхВорога.[5].[2].[22] <- 18.
   шляхВорога.[5].[2].[23] <- 36.
   шляхВорога.[5].[2].[24] <- 54.
   шляхВорога.[5].[2].[25] <- 72.
   шляхВорога.[5].[2].[26] <- 90.
   шляхВорога.[5].[2].[27] <- 90.


   шляхВорога.[5].[3].[1] <- швидкість_ворогів
   шляхВорога.[5].[3].[2] <- 0.95*швидкість_ворогів
   шляхВорога.[5].[3].[3] <- 0.81*швидкість_ворогів
   шляхВорога.[5].[3].[4] <- 0.59*швидкість_ворогів
   шляхВорога.[5].[3].[5] <- 0.31*швидкість_ворогів
   шляхВорога.[5].[3].[6] <- 0.
   шляхВорога.[5].[3].[7] <- -0.31*швидкість_ворогів
   шляхВорога.[5].[3].[8] <- -0.59*швидкість_ворогів
   шляхВорога.[5].[3].[9] <- -0.81*швидкість_ворогів
   шляхВорога.[5].[3].[10] <- -0.95*швидкість_ворогів
   шляхВорога.[5].[3].[11] <- -швидкість_ворогів
   шляхВорога.[5].[3].[12] <- -0.95*швидкість_ворогів
   шляхВорога.[5].[3].[13] <- -0.81*швидкість_ворогів
   шляхВорога.[5].[3].[14] <- -0.59*швидкість_ворогів
   шляхВорога.[5].[3].[15] <- -0.31*швидкість_ворогів
   шляхВорога.[5].[3].[16] <- 0.
   шляхВорога.[5].[3].[17] <- 0.31*швидкість_ворогів
   шляхВорога.[5].[3].[18] <- 0.59*швидкість_ворогів
   шляхВорога.[5].[3].[19] <- 0.81*швидкість_ворогів
   шляхВорога.[5].[3].[20] <- 0.95*швидкість_ворогів
   шляхВорога.[5].[3].[21] <- швидкість_ворогів
   шляхВорога.[5].[3].[22] <- 0.95*швидкість_ворогів
   шляхВорога.[5].[3].[23] <- 0.81*швидкість_ворогів
   шляхВорога.[5].[3].[24] <- 0.59*швидкість_ворогів
   шляхВорога.[5].[3].[25] <- 0.31*швидкість_ворогів
   шляхВорога.[5].[3].[26] <- 0.
   шляхВорога.[5].[3].[27] <- 0.

   шляхВорога.[5].[4].[1] <- 0.
   шляхВорога.[5].[4].[2] <- 0.31*швидкість_ворогів
   шляхВорога.[5].[4].[3] <- 0.59*швидкість_ворогів
   шляхВорога.[5].[4].[4] <- 0.81*швидкість_ворогів
   шляхВорога.[5].[4].[5] <- 0.95*швидкість_ворогів
   шляхВорога.[5].[4].[6] <- швидкість_ворогів
   шляхВорога.[5].[4].[7] <- 0.95*швидкість_ворогів
   шляхВорога.[5].[4].[8] <- 0.81*швидкість_ворогів
   шляхВорога.[5].[4].[9] <- 0.59*швидкість_ворогів
   шляхВорога.[5].[4].[10] <- 0.31*швидкість_ворогів
   шляхВорога.[5].[4].[11] <- 0.
   шляхВорога.[5].[4].[12] <- -0.31*швидкість_ворогів
   шляхВорога.[5].[4].[13] <- -0.59*швидкість_ворогів
   шляхВорога.[5].[4].[14] <- -0.81*швидкість_ворогів
   шляхВорога.[5].[4].[15] <- -0.95*швидкість_ворогів
   шляхВорога.[5].[4].[16] <- -швидкість_ворогів
   шляхВорога.[5].[4].[17] <- -0.95*швидкість_ворогів
   шляхВорога.[5].[4].[18] <- -0.81*швидкість_ворогів
   шляхВорога.[5].[4].[19] <- -0.59*швидкість_ворогів
   шляхВорога.[5].[4].[20] <- -0.31*швидкість_ворогів
   шляхВорога.[5].[4].[21] <- 0.
   шляхВорога.[5].[4].[22] <- 0.31*швидкість_ворогів
   шляхВорога.[5].[4].[23] <- 0.59*швидкість_ворогів
   шляхВорога.[5].[4].[24] <- 0.81*швидкість_ворогів
   шляхВорога.[5].[4].[25] <- 0.95*швидкість_ворогів
   шляхВорога.[5].[4].[26] <- швидкість_ворогів
   шляхВорога.[5].[4].[27] <- швидкість_ворогів

   шляхВорога.[6].[0].[0] <- 3.
   шляхВорога.[6].[1].[1] <- 1.
   шляхВорога.[6].[1].[2] <- 80.
   шляхВорога.[6].[1].[3] <- 200.
   шляхВорога.[6].[2].[1] <- 0.
   шляхВорога.[6].[2].[2] <- 90.
   шляхВорога.[6].[2].[3] <- -90.
   шляхВорога.[6].[3].[1] <- 0.
   шляхВорога.[6].[3].[2] <- 0.
   шляхВорога.[6].[3].[3] <- 0.
   шляхВорога.[6].[4].[1] <- 0.
   шляхВорога.[6].[4].[2] <- швидкість_ворогів
   шляхВорога.[6].[4].[3] <- -швидкість_ворогів


and створити_рівень1 () =  // this define the behavior of the différent squadron along the time play for level 1
   рівень1.[1] <- Словник()
   рівень1.[1].[1] <- 20    // when timeplay=level1[1][1]
   рівень1.[1].[2] <- 2    // lauch enemy with Path level1[1][2]
   рівень1.[1].[3] <- -10  // at x coordinate level1[1][3]
   рівень1.[1].[4] <- 0   // at y coordinate level1[1][4]
   рівень1.[1].[5] <- 1   // 1 for create enemy at the left side; 2 for the right side of screen
   рівень1.[1].[6] <- 4   // level[1][6] is the number of enemies
   рівень1.[1].[7] <- 1   // type of enemy
   рівень1.[2] <- Словник()
   рівень1.[2].[1] <- 80
   рівень1.[2].[2] <- 6
   рівень1.[2].[3] <- ширинаГри/2
   рівень1.[2].[4] <- -500
   рівень1.[2].[5] <- 1
   рівень1.[2].[6] <- 3
   рівень1.[2].[7] <- 1
   рівень1.[3] <- Словник()
   рівень1.[3].[1] <- 150
   рівень1.[3].[2] <- 0
   рівень1.[3].[3] <- -10
   рівень1.[3].[4] <- 0
   рівень1.[3].[5] <- 1
   рівень1.[3].[6] <- 6
   рівень1.[3].[7] <- 2
   рівень1.[4] <- Словник()
   рівень1.[4].[1] <- 280
   рівень1.[4].[2] <- 4
   рівень1.[4].[3] <- -10
   рівень1.[4].[4] <- 0
   рівень1.[4].[5] <- 1
   рівень1.[4].[6] <- 3
   рівень1.[4].[7] <- 2
   рівень1.[5] <- Словник()
   рівень1.[5].[1] <- 410
   рівень1.[5].[2] <- 6
   рівень1.[5].[3] <- ширинаГри/3
   рівень1.[5].[4] <- -50
   рівень1.[5].[5] <- 1
   рівень1.[5].[6] <- 3
   рівень1.[5].[7] <- 1
   рівень1.[6] <- Словник()
   рівень1.[6].[1] <- 430
   рівень1.[6].[2] <- 6
   рівень1.[6].[3] <- 2*ширинаГри/3
   рівень1.[6].[4] <- -50
   рівень1.[6].[5] <- 2
   рівень1.[6].[6] <- 3
   рівень1.[6].[7] <- 1

   рівень1.[5].[1] <- 500
   рівень1.[5].[2] <- 6
   рівень1.[5].[3] <- ширинаГри/3
   рівень1.[5].[4] <- -50
   рівень1.[5].[5] <- 1
   рівень1.[5].[6] <- 6
   рівень1.[5].[7] <- 2

   рівень1.[6].[1] <- 590
   рівень1.[6].[2] <- 5
   рівень1.[6].[3] <- 100
   рівень1.[6].[4] <- -80
   рівень1.[6].[5] <- 1
   рівень1.[6].[6] <- 3
   рівень1.[6].[7] <- 3
  
   рівень1.[7] <- Словник()
   рівень1.[7].[1] <- 690
   рівень1.[7].[2] <- 6
   рівень1.[7].[3] <- ширинаГри/3
   рівень1.[7].[4] <- -50
   рівень1.[7].[5] <- 2
   рівень1.[7].[6] <- 3
   рівень1.[7].[7] <- 2
   for i= 1 to 10 do
      рівень1.[7+i] <- Словник()
      рівень1.[7+i].[1] <- 700+50*i
      рівень1.[7+i].[2] <- 6
      рівень1.[7+i].[3] <- Математика.ОтриматиВипадковеЧисло(ширинаГри)
      рівень1.[7+i].[4] <- -50 + i
      рівень1.[7+i].[5] <- Математика.ОтриматиВипадковеЧисло(2)
      рівень1.[7+i].[6] <- Математика.ОтриматиВипадковеЧисло(3)
      рівень1.[7+i].[7] <- Математика.ОтриматиВипадковеЧисло(2)
   рівень1.[18] <- Словник()
   рівень1.[18].[1] <- 1300
   рівень1.[18].[2] <- 1
   рівень1.[18].[3] <- ширинаГри
   рівень1.[18].[4] <- -10
   рівень1.[18].[5] <- 2
   рівень1.[18].[6] <- 6
   рівень1.[18].[7] <- 2

   for i=1 to 10 do
      рівень1.[18+i] <- Словник()
      рівень1.[18+i].[1] <- 1330+50*i
      рівень1.[18+i].[2] <- 4+Математика.ОтриматиВипадковеЧисло(2)
      рівень1.[18+i].[3] <- Математика.ОтриматиВипадковеЧисло(50)
      рівень1.[18+i].[4] <- i
      рівень1.[18+i].[5] <- 1
      рівень1.[18+i].[6] <- Математика.ОтриматиВипадковеЧисло(3)
      рівень1.[18+i].[7] <- Математика.ОтриматиВипадковеЧисло(2)

   for i= 1 to 10 do
      рівень1.[28+i] <- Словник()
      рівень1.[28+i].[1] <- 1900+50*i
      рівень1.[28+i].[2] <- 4+Математика.ОтриматиВипадковеЧисло(2)
      рівень1.[28+i].[3] <- -Математика.ОтриматиВипадковеЧисло(50)
      рівень1.[28+i].[4] <- i
      рівень1.[28+i].[5] <- 1
      рівень1.[28+i].[6] <- Математика.ОтриматиВипадковеЧисло(3)
      рівень1.[28+i].[7] <- Математика.ОтриматиВипадковеЧисло(2)

   for i= 1 to 10 do
     рівень1.[38+i] <- Словник()
     рівень1.[38+i].[1] <- 2450+100*i
     рівень1.[38+i].[2] <- 6
     рівень1.[38+i].[3] <- Математика.ОтриматиВипадковеЧисло(ширинаГри)
     рівень1.[38+i].[4] <- -50 + i
     рівень1.[38+i].[5] <- Математика.ОтриматиВипадковеЧисло(2)
     рівень1.[38+i].[6] <- Математика.ОтриматиВипадковеЧисло(5)
     рівень1.[38+i].[7] <- Математика.ОтриматиВипадковеЧисло(2)

//Presentation
// todo

// Начать игру
Ініціалізація()
визначити_шляхи()
//створити_ворогів1()
Гра()
printfn "ГРУ ЗАКІНЧЕНО"