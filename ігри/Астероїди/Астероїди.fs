#if INTERACTIVE
#r "./bin/debug/Xwt.dll"
#r "./bin/debug/FunSharp.dll"
#endif

відкрити Бібліотека

// Asteroids Game
// Copyright (C) 2009, Jason T. Jacques 
// License: MIT license http://www.opensource.org/licenses/mit-license.php

// Game area controls
нехай ширинаГри  = 640.0
нехай высотаГри = 480.0
нехай колірФону = Кольори.Black

// Window title
нехай заголовокГри = "Астероїди, Рахунок: "

// Target frames per second
нехай fps = 25

// Управление кнопками
нехай кнопкаЛево  = "Left"
нехай кнопкаПраво = "Right"
нехай КнопкаВперед = "Up"
нехай кнопкаНазад = "Down"
нехай кнопкаВогонь = "Space"
нехай кнопкаПауза = "P"

// Asteroid (rock) settings
нехай швидкістьАстероїдів = 1.0
нехай колірАстероїдів = Кольори.White
нехай минАстероїд = 20 // small size rock
нехай типАстероїдів = 3 // number of rock sizes (multiples of small rock size)
нехай змінливий іницАстероїди = 5

// Ammo settings
нехай швидкістьКулі = 5.0
нехай колірКулі = Кольори.White
нехай життяКулі = 60 // moves before auto destruct
нехай максКуль = 10
нехай розмірКулі = 5.0

// Player settings
нехай колірІгрока = Кольори.White
нехай висотаІгрока = 30.0
нехай ширинаІгрока = 20.0
нехай змінливий ігрок = ""
нехай змінливий кутІгрока = 0.0
нехай змінливий швидкітьІгрока = 0.0
нехай безпечнийЧас = 100 // time player has to get out of the way on level up

// Point multiplier
нехай множникБалів = 10

// Array name initialisation
нехай астероїд = МасивЗмінногоРозміру()
нехай кутАстероїда = МасивЗмінногоРозміру()
нехай размірАстероїда = МасивЗмінногоРозміру()
нехай куля = МасивЗмінногоРозміру()
нехай кутКулі = МасивЗмінногоРозміру<плаваюча>()
нехай вікПулі = МасивЗмінногоРозміру()

нехай змінливий кількістьАстероїдів = 0
нехай змінливий кількістьКуль = 0

нехай шлях = "" // "http://smallbasic.com/drop/"
нехай великийАстероїд = СписокЗображень.ЗавантажитиЗображення(шлях + "Asteroids_BigRock.png")
нехай середнійАстероїд = СписокЗображень.ЗавантажитиЗображення(шлях + "Asteroids_MediumRock.png")
нехай малАстероїд = СписокЗображень.ЗавантажитиЗображення(шлях + "Asteroids_SmallRock.png")
нехай фон = СписокЗображень.ЗавантажитиЗображення(шлях + "Asteroids_Sky.png")

нехай змінливий пауза = 0
нехай змінливий гра = 0
нехай змінливий безпекаІгрока = 0
нехай змінливий рахунок = 0

нехай змінливий наступнийРозмір = 0
нехай змінливий наступнаПозиція = ""
нехай змінливий px1 = 0.0
нехай змінливий py1 = 0.0
нехай змінливий px2 = 0.0
нехай змінливий py2 = 0.0

// Налаштувати світ
нехай рек Ініціалізація () =
   ГрафичнеВікно.Сховати()
   ГрафичнеВікно.Заголовок <- заголовокГри + "0"
   //GraphicsWindow.CanResize <- "False"
   ГрафичнеВікно.Ширина <- цел ширинаГри
   ГрафичнеВікно.Висота <-цел высотаГри

   ГрафичнеВікно.КолірФона <- колірФону
   ГрафичнеВікно.КолірПензлика <- колірФону
   ГрафичнеВікно.НамалюватиЗображення(фон, 0, 0)

   ПеревіркаРівня()

   ГрафичнеВікно.КолірПера <- колірІгрока
   ігрок <- Фігури.ДодатиЗображення(шлях + "Asteroids_Ship.png")
   // player = Фігури.AddTriangle(playerWidth/2, 0, 0, playerHeight, playerWidth, playerHeight)
   Фігури.Перемістити(ігрок, (ширинаГри - ширинаІгрока) / 2.0, (плаваюча высотаГри - висотаІгрока) / 2.0)
   кутІгрока <- 0.0

// Головна ігрова процедура
та Гра () =
   ГрафичнеВікно.Показати()
   ГрафичнеВікно.КлавішаНатиснута <- Callback(ЗмінитиНапрямок)

   // Main loop
   гра <- 1
   пауза <- 0
   доки (гра = 1) зробити
     Програма.Затримка(1000/fps)
     якщо (пауза = 0) тоді
       Рух()
       ПеревіркаЗіткнень()
       СтарінняКуль()
       ПеревіркаРівня()

// Read key event and act
та ЗмінитиНапрямок () =   
   якщо (ГрафичнеВікно.ОстанняКнопка = кнопкаПраво) тоді
     кутІгрока <- (кутІгрока + 10.0) % 360.0
   інякщо (ГрафичнеВікно.ОстанняКнопка = кнопкаЛево) тоді
     кутІгрока <- (кутІгрока - 10.0) % 360.0
   інякщо (ГрафичнеВікно.ОстанняКнопка = КнопкаВперед) тоді
     швидкітьІгрока <- швидкітьІгрока + 1.0
   інякщо (ГрафичнеВікно.ОстанняКнопка = кнопкаНазад) тоді
     швидкітьІгрока <- швидкітьІгрока - 1.0
   інякщо (ГрафичнеВікно.ОстанняКнопка = кнопкаВогонь) тоді
     Постріл()
   інякщо (ГрафичнеВікно.ОстанняКнопка = кнопкаПауза) тоді
     пауза <- Математика.Залишок(пауза + 1, 2)  
   Фігури.Повернути(ігрок, кутІгрока)

// Move all on screen items
та Рух () =
   // Move player
   нехай x = Математика.Залишок(Фігури.ОтриматиЛіво(ігрок) + (Математика.Кос(Математика.ОтриматиРадіани(кутІгрока - 90.0)) * швидкітьІгрока) + ширинаГри, ширинаГри)
   нехай y = Математика.Залишок(Фігури.ОтриматиВерх(ігрок) + (Математика.Син(Математика.ОтриматиРадіани(кутІгрока - 90.0)) * швидкітьІгрока) + высотаГри, высотаГри)
   Фігури.Перемістити(ігрок, x, y)

   // Move rocks
   для i = 0 до кількістьАстероїдів-1 зробити
     нехай x = Математика.Залишок(Фігури.ОтриматиЛіво(астероїд.[i]) + (Математика.Кос(Математика.ОтриматиРадіани(кутАстероїда.[i] - 90.0)) * швидкістьАстероїдів) + ширинаГри, ширинаГри)
     нехай y = Математика.Залишок(Фігури.ОтриматиВерх(астероїд.[i]) + (Математика.Син(Математика.ОтриматиРадіани(кутАстероїда.[i] - 90.0)) * швидкістьАстероїдів) + высотаГри, высотаГри)
     Фігури.Перемістити(астероїд.[i], x, y)

   // Move ammo
   для i = 0 до кількістьКуль-1 зробити
     нехай x = Математика.Залишок(Фігури.ОтриматиЛіво(куля.[i]) + (Математика.Кос(Математика.ОтриматиРадіани(кутКулі.[i] - 90.0)) * швидкістьКулі) + ширинаГри, ширинаГри)
     нехай y = Математика.Залишок(Фігури.ОтриматиВерх(куля.[i]) + (Математика.Син(Математика.ОтриматиРадіани(кутКулі.[i] - 90.0)) * швидкістьКулі) + высотаГри, высотаГри)
     Фігури.Перемістити(куля.[i], x, y)
     вікПулі.[i] <- вікПулі.[i] + 1

// Check for collisions between onscreen items
та ПеревіркаЗіткнень () =
   // Calculate player bounding box.
   px1 <- Фігури.ОтриматиЛіво(ігрок) - ( (Математика.Модуль(ширинаІгрока * Математика.Кос(Математика.ОтриматиРадіани(кутІгрока)) + висотаІгрока * Математика.Син(Математика.ОтриматиРадіани(кутІгрока))) - ширинаІгрока) / 2.0)
   py1 <- Фігури.ОтриматиВерх(ігрок) - ( (Математика.Модуль(ширинаІгрока * Математика.Син(Математика.ОтриматиРадіани(кутІгрока)) + висотаІгрока * Математика.Кос(Математика.ОтриматиРадіани(кутІгрока))) - висотаІгрока) / 2.0)
   px2 <- px1 + Математика.Модуль(ширинаІгрока * Математика.Кос(Математика.ОтриматиРадіани(кутІгрока)) + висотаІгрока * Математика.Син(Математика.ОтриматиРадіани(кутІгрока)))
   py2 <- py1 + Математика.Модуль(ширинаІгрока * Математика.Син(Математика.ОтриматиРадіани(кутІгрока)) + висотаІгрока * Математика.Кос(Математика.ОтриматиРадіани(кутІгрока)))

   // Re-order co-oridinates if they are the wrong way arround
   якщо (px1 > px2) тоді
     нехай tmp = px1
     px1 <- px2
     px2 <- tmp  
   якщо (py1 > py2) тоді
     нехай tmp = py1
     py1 <- py2
     py2 <- tmp 

   нехай астероїдиДоВидалення = МасивЗмінногоРозміру()
   нехай кулиДоВидалення = МасивЗмінногоРозміру()
   // Check if each rock has hit something
   для i = 0 до кількістьАстероїдів-1 зробити
     нехай ax1 = Фігури.ОтриматиЛіво(астероїд.[i])
     нехай ay1 = Фігури.ОтриматиВерх(астероїд.[i])
     нехай ax2 = ax1 + float размірАстероїда.[i]
     нехай ay2 = ay1 + float размірАстероїда.[i]

     // Player collison
     якщо (безпекаІгрока < 1) тоді
       якщо ( (ax1 < px1 && ax2 > px1) || (ax1 < px2 && ax2 > px2) ) тоді
         якщо ( (ay1 < py1 && ay2 > py1) || (ay1 < py2 && ay2 > py2) ) тоді
           КінецьГри()

     // Ammo collison
     для j у 0..кількістьКуль-1 зробити          
         нехай bx1 = Фігури.ОтриматиЛіво(куля.[j])
         нехай by1 = Фігури.ОтриматиВерх(куля.[j])
         нехай bx2 = bx1 + розмірКулі
         нехай by2 = by1 + розмірКулі

         якщо ( (ax1 < bx1 && ax2 > bx1) || (ax1 < bx2 && ax2 > bx2) ) тоді
            якщо ( (ay1 < by1 && ay2 > by1) || (ay1 < by2 && ay2 > by2) ) тоді           
               астероїдиДоВидалення.Add(i)
               кулиДоВидалення.Add(j)

   для i у астероїдиДоВидалення |> Посл.уникальні |> Список.ізПосл |> Список.обр зробити
      ВидалитиАстероид i
   для j у кулиДоВидалення |> Посл.уникальні |> Список.ізПосл |> Список.обр зробити
      ВидалитиПулю j

   // Decrease the time player is safe
   якщо (безпекаІгрока > 0) тоді
     безпекаІгрока <- безпекаІгрока - 1   

// Add a new rock to the world
та ДодатиАстероїд () =
   // Check if the next rock size/position has been specified   
   нехай розмір,x,y =
      якщо (наступнийРозмір <> 0) тоді
         нехай розмір = минАстероїд * наступнийРозмір
         нехай x = Фігури.ОтриматиЛіво(наступнаПозиція)
         нехай y = Фігури.ОтриматиВерх(наступнаПозиція)
         наступнийРозмір <- 0
         розмір,x,y
      інакше
         // Choose a random size та position
         нехай розмір = минАстероїд * Математика.ОтриматиВипадковеЧисло(типАстероїдів)
         нехай x = Математика.ОтриматиВипадковеЧисло(цел ширинаГри - розмір)
         нехай y = Математика.ОтриматиВипадковеЧисло(цел высотаГри - розмір)
         розмір,плаваюча x,плаваюча y
   // Draw the rock
   ГрафичнеВікно.КолірПера <- колірАстероїдів
   нехай зображення =
      якщо розмір = 60 тоді великийАстероїд
      інякщо розмір = 40 тоді середнійАстероїд
      інакше малАстероїд
   астероїд.Add(Фігури.ДодатиЗображення(зображення))
   //Фігури.Zoom(rock.[rockCount],1.0,1.0)
   Фігури.Перемістити(астероїд.[кількістьАстероїдів], x, y)
   кутАстероїда.Add(плаваюча (Математика.ОтриматиВипадковеЧисло(360)))
   размірАстероїда.Add(розмір)
   кількістьАстероїдів <- кількістьАстероїдів + 1

// Remove a rock from the world and update score
та ВидалитиАстероид наступнийВилучений =
   нехай змінливий видаляємийРозмір = размірАстероїда.[наступнийВилучений] / минАстероїд

   // If not a mini rock
   якщо (видаляємийРозмір > 1) тоді
     // ... add new rocks until we have made up for it being broken apart...
     доки (видаляємийРозмір > 0) зробити
       наступнийРозмір <- Математика.ОтриматиВипадковеЧисло(видаляємийРозмір - 1)
       наступнаПозиція <- астероїд.[наступнийВилучений]
       видаляємийРозмір <- видаляємийРозмір - наступнийРозмір
       ДодатиАстероїд ()
     // And give a point for a 'hit'
     рахунок <- рахунок + 1
   інакше
     // We've destroyed it - give some extra points та 
     рахунок <- рахунок + 5   

   // Show updated score
   ГрафичнеВікно.Заголовок <- заголовокГри + (рахунок * множникБалів).ToString()

   // Remove all references from the arrays
   Фігури.Видалити(астероїд.[наступнийВилучений])
      
   астероїд.RemoveAt(наступнийВилучений)
   кутАстероїда.RemoveAt(наступнийВилучений)
   размірАстероїда.RemoveAt(наступнийВилучений)
   кількістьАстероїдів <- кількістьАстероїдів - 1

// Check if the player has completed the level, if so, level up
та ПеревіркаРівня () =
   якщо (кількістьАстероїдів < 1) тоді
     наступнийРозмір <- 0
     для i = 1 до іницАстероїди зробити
       ДодатиАстероїд()     
     іницАстероїди <- іницАстероїди + 1
     // Give players some time to move out of the way
     безпекаІгрока <- безпечнийЧас   

// Add ammo to game
та Постріл () =
   // Remove additional ammo
   доки (кількістьКуль > (максКуль - 1)) зробити     
     ВидалитиПулю 0
   // Add the ammo
   ГрафичнеВікно.КолірПера <- колірКулі   
   куля.Add(Фігури.ДобавитьЭллипс(розмірКулі, розмірКулі))
   Фігури.Перемістити(куля.[кількістьКуль], (px1 + px2 - розмірКулі) / 2.0, (py1 + py2 - розмірКулі) / 2.0)
   кутКулі.Add(кутІгрока)
   вікПулі.Add(0)
   кількістьКуль <- кількістьКуль + 1

// Check ammo age
та СтарінняКуль () =
   доки вікПулі.Count > 0 && (вікПулі.[0] > життяКулі) зробити     
      ВидалитиПулю 0

// Remove top Ammo
та ВидалитиПулю наступнийВилучений =
   Фігури.Видалити(куля.[наступнийВилучений])
   куля.RemoveAt(наступнийВилучений)
   кутКулі.RemoveAt(наступнийВилучений)
   вікПулі.RemoveAt(наступнийВилучений)
   кількістьКуль <- кількістьКуль - 1
   
// Display simple end game message box
та КінецьГри () =
   гра <- 0
   Фігури.Видалити(ігрок)
   ГрафичнеВікно.ПоказатиПовідомлення("Ваш рахунок " + (рахунок * множникБалів).ToString() + " балів. Дякуємо за гру.", "Гра скінчилась!")

// Start game
Ініціалізація()
Гра()
