пространство Библиотека

открыть Avalonia
открыть System
открыть System.Collections.Generic

тип внутренний ИнфоФигуры = { Фигура:Фигура; изменяемый Смещение:Point; изменяемый Opacity:float }

[<Sealed>]
тип Фигуры частный () =
   статический пусть перо () = Перо(ГрафическоеОкно.ЦветПера,ГрафическоеОкно.ШиринаПера)
   статический пусть кисть () = ГрафическоеОкно.ЦветКисти
   статический пусть шрифт () = 
      Шрифт(ГрафическоеОкно.РазмерШрифта,ГрафическоеОкно.ИмяШрифта,ГрафическоеОкно.ЖирностьШрифта, ГрафическоеОкно.КурсивностьШрифта)
   статический пусть фигуры = Dictionary<string,ИнфоФигуры>()
   статический пусть добавитьФигуру название фигура =
      пусть инфо = { Фигура=фигура; Смещение=Point(); Opacity=1.0 }
      фигуры.Add(название,инфо)      
      addDrawing (НарисоватьФигуру(название,фигура))
   статический пусть onShape имяФигуры действие =
      сопоставить фигуры.TryGetValue(имяФигуры) с
      | истина, инфо -> действие инфо
      | ложь, _ -> ()
   статический пусть генИмя имя = имя + Guid.NewGuid().ToString()
   статический член Удалить(имяФигуры) =
      Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.УдалитьФигуру(имяФигуры))
   статический член ДобавитьЛинию(x1,y1,x2,y2) =
      пусть имя = генИмя "Линия"
      ФигураЛинии(Линия(x1,y1,x2,y2),перо()) |> добавитьФигуру имя
      имя
   статический член ДобавитьЛинию(x1:int,y1:int,x2:int,y2:int) =
      Фигуры.ДобавитьЛинию(float x1, float y1, float x2, float y2)
   статический член ДобавитьПрямоугольник(ширина,высота) =
      пусть имя = генИмя "Прямоугольник"
      ФигураПрямоугольника(Прямоугольник(ширина,высота),перо(),кисть()) |> добавитьФигуру имя
      имя
   статический член ДобавитьПрямоугольник(ширина:int,высота:int) =
      Фигуры.ДобавитьПрямоугольник(float ширина, float высота)
   статический член ДобавитьТреугольник(x1,y1,x2,y2,x3,y3) =
      пусть имя = генИмя "Треугольник"
      ФигураТреугольника(Треугольник(x1,y1,x2,y2,x3,y3),перо(),кисть()) |> добавитьФигуру имя
      имя
   статический член ДобавитьЭллипс(ширина,высота) =
      пусть имя = генИмя "Эллипс"
      ФигураЭллипса(Эллипс(ширина,высота),перо(),кисть()) |> добавитьФигуру имя
      имя
   статический член ДобавитьЭллипс(ширина:int,высота:int) =
      Фигуры.ДобавитьЭллипс(float ширина,float высота)
   статический член ДобавитьИзображение(имяИзображения) =
      пусть имя = генИмя "Изображение"
      сопоставить СписокИзображений.ПопробоватьПолучитьБайтыИзображения(имяИзображения) с
      | Some байты ->
         пусть поток = новый System.IO.MemoryStream(байты)
         пусть изображение = новый Avalonia.Media.Imaging.Bitmap(поток) :> Avalonia.Media.IImage
         ФигураИзображения(ref изображение) |> добавитьФигуру имя
      | None ->
         пусть изображениеСсыл = 
            если имяИзображения.StartsWith("http:") || имяИзображения.StartsWith("https:") 
            тогда
               пусть изображениеСсыл = ref нуль
               async {
                  пусть! изображение = Хттп.ЗагрузитьИзображениеАсинх имяИзображения
                  изображениеСсыл := изображение
                  Мое.Приложение.Вызвать(фун () -> Мое.Приложение.Холст.СделатьНедействительным())
               } |> Async.Start
               изображениеСсыл
            иначе             
               пусть изображениеСсыл = ref нуль                 
               Мое.Приложение.Вызвать(фун () ->
                  использовать поток = Ресурс.ПолучитьПоток(имяИзображения)
                  изображениеСсыл := новый Avalonia.Media.Imaging.Bitmap(поток) :> Avalonia.Media.IImage
               )
               изображениеСсыл
         ФигураИзображения(изображениеСсыл) |> добавитьФигуру имя
      имя
   статический член ДобавитьТекст(текст) =
      пусть name = генИмя "Text"
      ФигураТекста(ref текст, шрифт(), кисть()) |> добавитьФигуру name
      name
   статический член СкрытьФигуру(имяФигуры) =      
      Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.УстановитьВидимостьФигуры(имяФигуры,ложь))      
   статический член ПоказатьФигуру(имяФигуры) =
      Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.УстановитьВидимостьФигуры(имяФигуры,истина))      
   статический член Переместить(имяФигуры,x,y) =
      onShape имяФигуры (фун инфо ->
         инфо.Смещение <- Point(x,y)
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.ПереместитьФигуру(имяФигуры,инфо.Смещение))
      )
   статический член Переместить(имяФигуры,x:int,y:int) =
      Фигуры.Переместить(имяФигуры, float x, float y)
   статический член ПолучитьЛево(имяФигуры) =      
      сопоставить фигуры.TryGetValue(имяФигуры) с
      | истина, info -> info.Смещение.X
      | ложь, _ -> 0.0
   статический член ПолучитьВерх(имяФигуры) =
      сопоставить фигуры.TryGetValue(имяФигуры) с
      | истина, info -> info.Смещение.Y
      | ложь, _ -> 0.0
   статический член SetOpacity(имяФигуры, opacity) =
      onShape имяФигуры (фун info ->
         info.Opacity <- opacity
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.УстановитьНепрозрачностьФигуры(имяФигуры,opacity))
      )
   статический член SetOpacity(имяФигуры, opacity:int) =
      Фигуры.SetOpacity(имяФигуры, float opacity)
   статический член GetOpacity(имяФигуры) =
      сопоставить фигуры.TryGetValue(имяФигуры) с
      | истина, info -> info.Opacity
      | ложь, _ -> 1.0
   статический член Повернуть(имяФигуры, угол) =
      сопоставить фигуры.TryGetValue(имяФигуры) с
      | истина, info ->
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.УстановитьВращениеФигуры(имяФигуры,угол))
      | ложь, _ -> ()
   статический член Повернуть(имяФигуры, угол:int) =
      Фигуры.Повернуть(имяФигуры, float угол)
   статический член Zoom(имяФигуры, scaleX, scaleY) =
      сопоставить фигуры.TryGetValue(имяФигуры) с
      | истина, info ->
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.УстановитьМасштабФигуры(имяФигуры,scaleX,scaleY))
      | ложь, _ -> ()
   статический член УстановитьТекст(имяФигуры, текст) =
      onShape имяФигуры (фун info ->
         сопоставить info.Фигура с
         | ФигураТекста(textRef, font, color) ->
            Мое.Приложение.Вызвать (фун () -> textRef := текст; Мое.Приложение.Холст.СделатьНедействительным())
         | _ -> invalidOp "Expecting text shape"
      )       
   статический член Animate(имяФигуры,x:float,y:float,ms:int) =
      Фигуры.Переместить(имяФигуры, x, y)
   статический член Animate(имяФигуры,x:int,y:int,мс:int) =
      Фигуры.Animate(имяФигуры, float x, float y, мс)

