пространство Библиотека

открыть System
открыть Avalonia.Media.Imaging
открыть Avalonia.Media

[<Sealed>]
тип ГрафическоеОкно частный () =   
   статический пусть рнд = Random()
   статический пусть изменяемый фоновыйЦвет = Цвета.White
   статический пусть изменяемый ширина = 640
   статический пусть изменяемый высота = 480
   статический пусть перо () = Перо(ГрафическоеОкно.ЦветПера,ГрафическоеОкно.ШиринаПера)
   статический пусть кисть () = ГрафическоеОкно.ЦветКисти
   статический пусть шрифт () = 
      Шрифт.Шрифт(ГрафическоеОкно.РазмерШрифта,ГрафическоеОкно.ИмяШрифта,ГрафическоеОкно.ЖирностьШрифта, ГрафическоеОкно.КурсивностьШрифта)
   статический пусть нарисовать drawing = addDrawing drawing      
   статический пусть нарисоватьВ (x,y) drawing = addDrawingAt drawing (x,y)
   статический член Заголовок
      с set title =
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Окно.Title <- title)
   статический член ЦветФона
      с get () = фоновыйЦвет
      и set цвет = 
         фоновыйЦвет <- цвет
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.Background <- новый Avalonia.Media.SolidColorBrush(кXwtЦвету цвет))
   статический член Ширина
      с get () = ширина
      и set новаяШирина =
         ширина <- новаяШирина
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.SetWindowWidth(float новаяШирина))
   статический член Высота
      с get () = высота
      и set новаяВысота =
         высота <- новаяВысота
         Мое.Приложение.Вызвать (фун () -> Мое.Приложение.SetWindowHeight(float новаяВысота))
   статический член CanResize
      с get () = истина
      и set (value:bool) = ()
   статический член знач ЦветПера = Цвета.Black с get, set
   статический член знач ШиринаПера = 2.0 с get, set
   статический член знач ЦветКисти = Цвета.Purple с get,set
   статический член знач РазмерШрифта = 12.0 с get,set
   статический член знач ИмяШрифта = "" с get,set
   статический член знач ЖирностьШрифта = ложь с get,set
   статический член знач КурсивностьШрифта = ложь с get,set
   статический член Очистить () =
      Мое.Приложение.Вызвать (фун () -> Мое.Приложение.Холст.ОчиститьРисунки())
   статический член НарисоватьЛинию(x1,y1,x2,y2) =
      НарисоватьЛинию(Линия(x1,y1,x2,y2),перо()) |> нарисовать
   статический член НарисоватьЛинию(x1:int,y1:int,x2:int,y2:int) =
      ГрафическоеОкно.НарисоватьЛинию(float x1, float y1, float x2, float y2)
   статический член НарисоватьПрямоугольник(x,y,width,height) =
      НарисоватьПрямоугольник(Прямоугольник(width,height),перо()) |> нарисоватьВ (x,y)
   статический член НарисоватьПрямоугольник(x:int,y:int,width:int,height:int) =
      ГрафическоеОкно.НарисоватьПрямоугольник(float x, float y, float width, float height)
   статический член НарисоватьТреугольник(x1,y1,x2,y2,x3,y3) =
      НарисоватьТреугольник(Треугольник(x1,y1,x2,y2,x3,y3),перо()) |> нарисовать
   статический член НарисоватьЭллипс(x,y,width,height) =
      НарисоватьЭллипс(Эллипс(width,height),перо()) |> нарисоватьВ (x,y)
   статический член НарисоватьЭллипс(x:int,y:int,width:int,height:int) =
      ГрафическоеОкно.НарисоватьЭллипс(float x, float y, float width, float height)
   статический член НарисоватьИзображение(имяИзображения,x,y) =
      пусть ссылкаИзображение =
         сопоставить СписокИзображений.ПопробоватьПолучитьБайтыИзображения имяИзображения с
         | Some байты -> 
            использовать потокПамяти = новый System.IO.MemoryStream(байты)
            ref (новый Bitmap(потокПамяти) :> Avalonia.Media.IImage)
         | None ->
            если имяИзображения.StartsWith("http:") || имяИзображения.StartsWith("https:") 
            тогда
                пусть ссылкаИзображение = ref нуль
                async {
                   пусть! изображение = Хттп.ЗагрузитьИзображениеАсинх имяИзображения
                   ссылкаИзображение := изображение
                   Мое.Приложение.Вызвать(фун () -> Мое.Приложение.Холст.СделатьНедействительным())
                } |> Async.Start
                ссылкаИзображение
            иначе
                ref (новый Bitmap(Reflection.Assembly.GetEntryAssembly().GetManifestResourceStream(имяИзображения)) :> IImage)
      НарисоватьИзображение(ссылкаИзображение,x,y) |> нарисовать
   статический член НарисоватьИзображение(имяИзображения,x:int,y:int) =
      ГрафическоеОкно.НарисоватьИзображение(имяИзображения, float x, float y)
   статический член НарисоватьТекст(x,y,текст) =
      НарисоватьТекст(x,y,текст,шрифт(),кисть()) |> нарисовать
   статический член НарисоватьТекст(x:int,y:int,текст) =
      ГрафическоеОкно.НарисоватьТекст(float x,float y,текст)
   статический член DrawBoundText(x,y,ширина,текст) =
      НарисоватьТекстВРамке(x,y,ширина,текст,шрифт(),кисть()) |> нарисовать
   статический член ЗаполнитьПрямоугольник(x,y,ширина,высота) =
      ЗаполнитьПрямоугольник(Прямоугольник(ширина,высота),кисть()) |> нарисоватьВ (x,y)
   статический член ЗаполнитьПрямоугольник(x:int,y:int,ширина:int,высота:int) =
      ГрафическоеОкно.ЗаполнитьПрямоугольник(float x,float y,float ширина,float высота)
   статический член ЗаполнитьТреугольник(x1,y1,x2,y2,x3,y3) =
      ЗаполнитьТреугольник(Треугольник(x1,y1,x2,y2,x3,y3),кисть()) |> нарисовать
   статический член ЗаполнитьЭллипс(x,y,ширина,высота) =
      ЗаполнитьЭллипс(Эллипс(ширина,высота),кисть()) |> нарисоватьВ (x,y)
   статический член ЗаполнитьЭллипс(x:int,y:int,ширина:int,высота:int) =
      ЗаполнитьЭллипс(Эллипс(float ширина,float высота),кисть()) |> нарисоватьВ (float x,float y)
   статический член ПоследняяКнопка с get() = Мое.Приложение.ПоследняяКнопка
   статический член КнопкаОтпущена с set callback = Мое.Приложение.KeyUp <- callback
   статический член КнопкаНажата с set callback = Мое.Приложение.KeyDown <- callback 
   статический член МышьX с get() = Мое.Приложение.МышьX
   статический член МышьY с get() = Мое.Приложение.МышьY
   статический член МышьНажата с set callback = Мое.Приложение.MouseDown <- callback
   статический член МышьОтпущена с set callback = Мое.Приложение.MouseUp <- callback
   статический член МышьПеремещена с set callback = Мое.Приложение.MouseMove <- callback
   статический член ПолучитьЦветИзRGB(r,g,b) = Цвет(255uy,byte r,byte g,byte b)
   статический член ПолучитьСлучайныйЦвет() : Цвет =
      пусть байты = [|1uy..3uy|]
      рнд.NextBytes(байты)
      Цвет(255uy,байты.[0],байты.[1],байты.[2])
   статический член Показать() = Мое.Приложение.Показать()
   статический член Спрятать() = Мое.Приложение.Спрятать()
   статический член ПоказатьСообщение(text:string,title) = 
      Мое.Приложение.Вызвать(фун () -> Мое.Приложение.ПоказатьСообщение(text,title))